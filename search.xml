<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[【OSG】OSG、osgQT编译及配置（Linux/ubuntu）]]></title>
    <url>%2F2017%2F11%2F14%2Fosg-compiling-and-configuration%2F</url>
    <content type="text"><![CDATA[写在最前面本文介绍了OSG及osgQT的编译及配置过程 系统环境ubuntu: 16.04CMake: 3.5.1OSG: 3.5.7 OSG编译及配置源代码下载、编译源代码：Github链接12345mkdir buildcd buildcmake -D BUILD_OSG_EXAMPLES=ON ..makemake install 数据文件配置数据文件下载：Github链接解压存放，例如/home/&lt;用户名&gt;/Documents/OpenSceneGraph-Data OSG环境变量配置1sudo gedit /etc/profile 在最末尾加上如下语句12345#OSGexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib64export PATH=$PATH:/usr/local/share/OpenSceneGraph/binexport OSG_FILE_PATH=/home/&lt;用户名&gt;/Documents/OpenSceneGraph-Dataexport OSG_DIR=/usr/local/lib64 分别为 添加OSG库路径到系统共享库路径 OSG的一些可执行文件路径 OSG的数据文件路径（根据实际存放位置修改） OSG动态链接库路径 执行source /etc/profile或重启以更新系统环境变量 至此OSG配置完成 测试运行如下命令1osgviewer cow.osgt 如显示以下图像则为测试成功 osgQT编译源代码下载、编译源代码：Github链接12345mkdir buildcd buildcmake -D BUILD_OSG_EXAMPLES=ON ..makemake install 测试通过运行编译出来的例子验证是否配置成功 QT中使用OSG的CMakeLists.txt写法并非完整写法，可供参考12345678## 增加OSG的依赖FIND_PACKAGE(OpenSceneGraph REQUIRED COMPONENTS osgDB osgGA osgUtil osgText osgViewer osgWidget)LIST(APPEND INCS_DIR $&#123;OPENSCENEGRAPH_INCLUDE_DIRS&#125;)FILE(GLOB OST_QT_LIB "/usr/local/lib64/libosgQt5.so")LIST(APPEND LIBS $&#123;OPENSCENEGRAPH_LIBRARIES&#125; $&#123;OST_QT_LIB&#125;)INCLUDE_DIRECTORIES($&#123;INCS_DIR&#125;)TARGET_LINK_LIBRARIES(Project $&#123;LIBS&#125;) 注：CMake中的FIND_PACKAGE(osgQT)测试无效，不清楚是不是版本问题]]></content>
      <categories>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>OSG</tag>
        <tag>QT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【Hexo】利用七牛qshell工具上传博客图片]]></title>
    <url>%2F2017%2F08%2F11%2Fhexo-qiniu-image-upload%2F</url>
    <content type="text"><![CDATA[写在最前面本文对利用七牛qshell上传博客图片的设置及使用方法进行了整理 系统环境ubuntu: 16.04hexo: 3.3.8 qshell的配置下载qshellGithub链接下载对应的版本，本文以ubuntu为例 qhell的配置将qshell可执行文件存放到home文件夹下例如/home/用户名/qiniu添加可执行权限chmod +x qshell将qshell所在目录加入系统环境变量1$ sudo gedit ~/.bashrc 添加如下环境变量1export PATH=$PATH:/home/用户名/qiniu 运行source ~/.bashrc使修改立即生效在终端内输入qshell测试一下是否添加成功 配置账户进入/home/用户名/qiniu目录，建立账户，此处使用-m多账户模式将账户信息建立在qshell工具所在目录，其中AccessKey和SecretKey可从七牛账户中获取1$ qshell -m account &lt;AccessKey&gt; &lt;SecretKey&gt; 账户建立完毕用如下命令查看是否建立成功1$ qshell -m account 配置上传设置在/home/用户名/qiniu目录下建立config文件输入如下参数，前四项自行填写123456789101112131415161718&#123; &quot;src_dir&quot; : &quot;/home/用户名/.../source/_posts&quot;, &quot;access_key&quot; : &quot;ak&quot;, &quot;secret_key&quot; : &quot;sk&quot;, &quot;bucket&quot; : &quot;bucket名称&quot;, &quot;ignore_dir&quot; : false, &quot;overwrite&quot; : true, &quot;check_exists&quot; : true, &quot;check_hash&quot; : false, &quot;check_size&quot; : false, &quot;skip_file_prefixes&quot; : &quot;.git&quot;, &quot;skip_path_prefixes&quot; : &quot;&quot;, &quot;skip_fixed_strings&quot; : &quot;&quot;, &quot;skip_suffixes&quot; : &quot;.md&quot;, &quot;rescan_local&quot; : true, &quot;log_file&quot; : &quot;upload.log&quot;, &quot;log_level&quot; : &quot;info&quot;&#125; 文件上传当_posts下添加的图片之后，在/home/用户名/qiniu目录下运行一下命令即可完成上传1$ qshell -m qupload config 外链获取方法1直接在网页界面复制外链 方法2使用qshell获取域名及文件列表，并将两者进行拼接，/home/用户名/qiniu目录下获取域名1$ qshell -m domains &lt;空间名&gt; 获取文件列表1$ qshell -m listbucket &lt;空间名&gt; &lt;存储文件列表的文件名&gt; 将两者进行拼接即可获取完整外链存储至final文件1$ cat &lt;存储文件列表的文件名&gt; | awk '&#123;print "域名/"$1&#125;' &gt;final 参考https://github.com/qiniu/qshellhttps://segmentfault.com/q/1010000005149132/a-1020000005150007]]></content>
      <categories>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
